Run application:-
nx serve <NAME OF APPLICATION HERE>       -   e.g. nx serve ngshop    -   nx serve ngshop --port 4100


Create a new application:-
nx generate @nrwl/angular:app <NAME OF APPLICATION HERE>


Create a component:-
cd here:- \\frontend\bluebits\ enter:-
nx g component home-page --project=ngshop
nx g component pages/home-page --project=ngshop


To do a dry run you can do this:-
nx g component home-page --project=ngshop --dry-run


Create a new library using NX:-
npx nx g @nrwl/workspace:lib ui --dry-run
example of 'Name' input box:-
pages/orders/orders-form


Create a component using nx:-
nx generate @schematics/angular:component --name=COMPONENT-NAME --project=ui --style=scss --export --selector=COMPONENT-NAME --no-interactive

Build applicatons:-
nx build admin
nx build ngshop
nx build ngshop --output-path docs --base-href /ngshop/
nx build ngshop --prod --output-path docs --base-href /ngshop/      - use for GitHub
nx build ngshop --prod --output-path ../ngshop --base-href /ngshop/      - use for AWS Amplify
nx build admin --prod --output-path ../admin --base-href /admin/      - use for AWS Amplify. Note: You will need to be in the 'bluebits' folder to run this




Heroku Backend Installation:-
https://cli-auth.heroku.com/auth/cli/browser/6fc41f12-bb2d-41a8-9664-e8eaf35d2bc4?requestor=SFMyNTY.g2gDbQAAAAw4OS4zNS4zMC4xODBuBgBY2ebhfAFiAAFRgA.KHco27aJuYK2Aiyp47SEG-ZRKvnmnty3g4EzazoZktk
heroku git:remote -a eshop-backend-101
then login via browser
git add .
git commit -m "Added new func"
git push heroku master

